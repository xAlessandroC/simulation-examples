# THE CHOICE OF THE PARAMETERS CAN BE MOTIVATED BY CITING THE PAPER: Simu5G: A system-level simulator for 5G networks
[General]
num-rngs = 3
sim-time-limit = 60s
output-scalar-file-append = false
**.routingRecorder.enabled = false
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
**.vector-recording = true

##########################################################
#              Cellular network configurator             #
##########################################################
**.configurator.config = xmldoc("./demo.xml")

##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.downlink_interference = true
**.uplink_interference = true
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  



#######################################################
#        CA and channel model configuration           # 
#######################################################
#
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands =  25 #${numBands=25}
*.carrierAggregation.componentCarrier[0].numerologyIndex = 2

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0


# UE Channel configuration
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

**.ue[*].masterId = 1   
**.ue[*].macCellId = 1   
**.ue[*].nrMasterId = 1
**.ue[*].nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

*.mechost*.*.cellularNic.nrPhy.dynamicCellAssociation = true
*.mechost*.*.masterId = 0     # ignored if dynamic association is disabled
*.mechost*.*.macCellId = 0    # ignored if dynamic association is disabled
*.mechost*.*.nrMasterId = 1     # ignored if dynamic association is disabled
*.mechost*.*.nrMacCellId = 1    # ignored if dynamic association is disabled

*.car*.cellularNic.nrPhy.dynamicCellAssociation = true
*.car*.masterId = 0     # ignored if dynamic association is disabled
*.car*.macCellId = 0    # ignored if dynamic association is disabled
*.car*.nrMasterId = 1     # ignored if dynamic association is disabled
*.car*.nrMacCellId = 1    # ignored if dynamic association is disabled

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


**.hasRNISupport = true

#**.configurator.dumpRoutes = true
#**.configurator.dumpTopology = true
#**.configurator.dumpLinks = true
#**.configurator.dumpAddresses = true




[Config TestSubscription]
network = simulation_examples.simulations.dynamicMECHost.ParkNetwork
sim-time-limit=30s
#*.gNodeB1.cellularNic.phy.

############# Repetition ##########################
repeat = 50
seed-set = ${runnumber}+1941023425 # seed changing for each simulation

experiment-label = "${configname}"
measurement-label = "${iterationvars}"
replication-label = "#${repetition}, seed-set=<seedset>"

###################################################


# ############### Disable vector recordings #######
**.mechost1.router.**.vector-recording = false
**.mechost1.upf_mec.**.vector-recording = false
**.mechost1.mecPlatformManagerHost.**.vector-recording = false
**.mechost1.vim.**.vector-recording = true
**.mechost1.mecPlatform.interfaceTable.**.vector-recording = false
**.mechost1.mecPlatform.mp1Ppp.**.vector-recording = false
**.mechost1.mecPlatform.lo*.**.vector-recording = false
**.mechost1.mecPlatform.extEth.**.vector-recording = false
**.mechost1.mecPlatform.ipv4.**.vector-recording = false
**.mechost1.mecPlatform.ipv6.**.vector-recording = false
**.mechost1.mecPlatform.udp.**.vector-recording = false
**.mechost1.mecPlatform.tcp.**.vector-recording = false
**.upf.**.vector-recording = false
**.iUpf.**.vector-recording = false
**.gNodeB1.**.vector-recording = false
**.router.**.vector-recording = false
**.server.**.vector-recording = false
**.mecOrchestrator.**.vector-recording = true
**.ualcmp.**.vector-recording = false
**.configurator.**.vector-recording = false
**.binder.**.vector-recording = false
**.carrierAggregation.**.vector-recording = false
**.channelControl.**.vector-recording = false
**.routingRecorder.**.vector-recording = false
**.ue[*].**.vector-recording = true
**.ue[*].mobility.**.vector-recording = false
**.ue[*].interfaceTable.**.vector-recording = false
**.ue[*].pcapRecorder*.**.vector-recording = false
**.ue[*].ueCollector.**.vector-recording = false
**.ue[*].udp.**.vector-recording = false
**.ue[*].tcp.**.vector-recording = false
**.ue[*].sctp.**.vector-recording = false
**.ue[*].ipv4.**.vector-recording = false
**.ue[*].ipv6.**.vector-recording = false
**.ue[*].encap.**.vector-recording = false
**.ue[*].cellularNic.**.vector-recording = false
**.ue[*].lo*.**.vector-recording = false
**.ue[*].eth*.**.vector-recording = false

**.car[*].mobility.**.vector-recording = false
**.car[*].interfaceTable.**.vector-recording = false
**.car[*].pcapRecorder*.**.vector-recording = false
**.car[*].ueCollector.**.vector-recording = false
**.car[*].udp.**.vector-recording = false
**.car[*].tcp.**.vector-recording = false
**.car[*].sctp.**.vector-recording = false
**.car[*].ipv4.**.vector-recording = false
**.car[*].ipv6.**.vector-recording = false
**.car[*].encap.**.vector-recording = false
**.car[*].cellularNic.**.vector-recording = false
**.car[*].lo*.**.vector-recording = false
**.car[*].eth*.**.vector-recording = false

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 2000m
**.mobility.constraintAreaMaxY = 10000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### BS position #################
*.gNodeB1.mobility.initialX = 139m
*.gNodeB1.mobility.initialY = 302m

#------------Server configuration---------------
*.server.numApps = 2
*.server.app[0].typename = "HttpBrokerApp"
*.server.app[1].typename = "ResourceRegisterApp"
*.server.app[1].startTime = 0.02s


##------------MecCar configuration---------------
# use this for ping time comparison graph
#**.numParkedCar = ${NUMPARKED = int($SKIP)}

#**.numParkedCar = ${NUMCARS=150..200 step 50}
**.numParkedCar = ${NUMCARS=10..150 step 10}
**.numUe = ${NUMUE=0}
#**.numUe = 100
*.car[*].numApps = 1
*.car[*].viApp.localPort = 2222
*.car[0].viApp.localAddress = "car[0]"
*.car[*].viApp.localAddress = "car[" + string(parentIndex()) + "]"
##*.car[1].viApp.localAddress = "car[1]"
*.car[*].viApp.vimAddress = "mechost1.vim"
*.car[*].viApp.vimPort = 3333
*.car[*].viApp.mp1Address = "mechost1.mecPlatform"
*.car[*].viApp.mp1Port = 10021
*.car[*].app[0].typename = "ClientResourceApp"
*.car[*].app[0].localPort = 3333
#*.car.app[0].destPort = 3333
*.car[*].app[0].destAddress = "server" 
*.car[0].app[0].localAddress = "car[0]"
*.car[*].app[0].localAddress = "car[" + string(parentIndex()) + "]"
#*.car2.app[0].localAddress = "car2"
*.car[*].app[0].viPort = 2222
*.car[*].app[0].startTime = 0.05s
*.car[*].app[0].parkTime = 10s #uniform(8s, 10s)
#*.car[*].app[0].parkTime = uniform(8s, 10s)


##------------CAR initial position---------------
**.car[*].mobility.initialX = uniform(0m, 500m)
#**.car[0].mobility.initialX = 210m
#**.car[1].mobility.initialX = 240m
#**.car[2].mobility.initialX = 280m
#**.car[3].mobility.initialX = 210m
#**.car[4].mobility.initialX = 240m
#**.car[5].mobility.initialX = 280m
#**.car[6].mobility.initialX = 210m
#**.car[7].mobility.initialX = 240m
#**.car[8].mobility.initialX = 280m
##**.car[9].mobility.initialX = 280m
#**.car[0].mobility.initialX = 100m
**.car[*].mobility.initialY = uniform(250m, 1000m)
#**.car[0..2].mobility.initialY = 310m
#**.car[2..5].mobility.initialY = 350m
#**.car[5..8].mobility.initialY = 390m

##------------UEWarningAlertApp---------------
*.ue[*].numApps = 2
*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/ExtMECWarningAlertApp.json"
##
*.ue[*].app[1].typename = "DUEWarningAlertApp"
*.ue[*].app[1].mecAppName = "ExtMECWarningAlertApp"

# set address
*.ue[*].app[1].deviceAppAddress = "ue[" + string(parentIndex()) + "]"
*.ue[*].app[1].amsAddress = "mechost1.mecPlatform"
*.ue[*].app[1].amsPort = 10022
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = 0.5s										#when sending start warning alert app									#period to sending messages
*.ue[*].app[1].stopTime = 30s
#
*.ue[*].app[1].positionX = 340
*.ue[*].app[1].positionY = 411
*.ue[*].app[1].radius = 30

#*.ue[*].app[1].coreAddress = "cloudServer"
#*.ue[*].app[1].coreTesting = true


## UEs INITIAL POSITIONs
*.ue[*].mobility.typename = "LinearMobility"
**.ue[*].mobility.initialX = 250m
**.ue[*].mobility.initialY = 411m


**.ue[*].mobility.initialMovementHeading = 0deg
**.ue[*].mobility.speed = 10mps


# UALCMP config
*.ualcmp.isMEOapp = true

# MEC Orchestrator settings
*.mecOrchestrator.meoApp.localAddress = "mecOrchestrator"
*.mecOrchestrator.meoApp.localPort = 9876
*.mecOrchestrator.meoApp.mecApplicationPackageList = "ExtMECWarningAlertApp"

## MECHost configuration
**.mechost*.maxMECApps = 100	
**.mechost*.bsList = "gNodeB1"
**.mechost*.color = "purple"
# Vim
*.mechost1.vim.vimApp.localAddress = "mechost1.vim"
*.mechost1.vim.vimApp.localPort = 3333 
*.mechost*.vim.vimApp.brokerAddress = "server"
#*.mechost*.vim.vimApp.searchType = "BEST_FIRST"
*.mechost*.vim.vimApp.searchType = "ROUND_ROBIN"
#*.mechost*.vim.vimApp.skipLocalResources = true
*.mechost*.vim.vimApp.skipLocalResources = ${SKIP=true}
*.mechost*.vim.vimApp.mepmAddress = "mechost1.mecPlatformManagerHost"
*.mechost*.vim.vimApp.mepmPort = 3334
*.mechost*.vim.vimApp.meoAddress = "mecOrchestrator"
*.mechost*.vim.vimApp.meoPort = 9876
*.mechost*.vim.vimApp.mp1Address = "mechost1.mecPlatform"
*.mechost*.vim.vimApp.mp1Port = 10021
*.mechost1.vim.viApp.localAddress = "mechost1.vim"
*.mechost1.vim.viApp.vimAddress = "mechost1.vim"
*.mechost*.vim.viApp.vimPort = 3333
#*.mechost1.vim.viApp.mp1Address = "mechost1.mecPlatform"
#*.mechost*.vim.viApp.mp1Port = 10021

# Mepm
*.mechost1.mecPlatformManagerHost.mepmApp.localAddress = "mechost1.mecPlatformManagerHost"
*.mechost1.mecPlatformManagerHost.mepmApp.vimAddress = "mechost1.vim"
*.mechost*.mecPlatformManagerHost.mepmApp.vimPort = 3333
*.mechost*.mecPlatformManagerHost.mepmApp.meoAddress = "mecOrchestrator"
*.mechost*.mecPlatformManagerHost.mepmApp.meoPort = 9876
*.mechost1.mecPlatformManagerHost.mepmApp.brokerAddress = "mechost1.mecPlatform"
*.mechost1.mecPlatformManagerHost.mepmApp.brokerPort = 10022

# Mep
**.mechost*.mecPlatform.numMecServices = 2
**.mechost*.mecPlatform.mecService[0].typename = "LocationService"
**.mechost1.mecPlatform.mecService[*].localAddress = "mechost1.mecPlatform" #da cambiare!!
**.mechost*.mecPlatform.mecService[0].localPort = 10020

**.mechost*.mecPlatform.mecService[1].typename = "ApplicationMobilityService"
**.mechost*.mecPlatform.mecService[1].localPort = 10022

**.mechost*.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
**.mechost*.mecPlatform.mecService[0].rng-0 = 0 # request service time
**.mechost*.mecPlatform.mecService[0].requestServiceTime = 100us
**.mechost*.mecPlatform.mecService[0].subscriptionServiceTime = 11us

**.mechost1.mecPlatform.serviceRegistry.localAddress = "mechost1.mecPlatform" #da cambiare!!
**.mechost*.mecPlatform.serviceRegistry.localPort = 10021

**.mechost*.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
**.mechost*.mecPlatform.serviceRegistry.rng-0 = 0 # request service time




