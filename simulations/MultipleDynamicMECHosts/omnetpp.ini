[General]
num-rngs = 3
sim-time-limit = 60s
output-scalar-file-append = false
**.routingRecorder.enabled = false
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
**.vector-recording = true

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

##########################################################
#              Cellular network configurator             #
##########################################################
**.configurator.config = xmldoc("./demo.xml")

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40   # reports CQI every 40ms


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)




[Config MultipleMECHosts]
network = simulation_examples.simulations.MultipleDynamicMECHosts.MultipleDynMecHostsNet
sim-time-limit=100s

############# Repetition ##########################
repeat = 5
seed-set = ${runnumber}+1941023425 # seed changing for each simulation

experiment-label = "${configname}"
measurement-label = "${iterationvars}"
replication-label = "#${repetition}, seed-set=<seedset>"

###################################################

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=2}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 6GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}
**.fbPeriod = 10

*.gNodeB*.cellularNic.numCarriers = 1
*.gNodeB*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.car[*].cellularNic.numCarriers = 1
*.car[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

# eNodeB configuration
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeB2.macCellId = 2
**.gNodeB2.macNodeId = 2 

*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1
*.car[*].macCellId = 0
*.car[*].masterId = 0
*.car[*].nrMacCellId = 1
*.car[*].nrMasterId = 1
**.dynamicCellAssociation = true
**.enableHandover = true
**.amcMode = "D2D"


# ############### Disable vector recordings #######
**.mechost*.router.**.vector-recording = false
**.mechost*.upf_mec.**.vector-recording = false
**.mechost*.mecPlatformManagerHost.**.vector-recording = false
**.mechost*.vim.**.vector-recording = true
**.mechost*.mecPlatform.interfaceTable.**.vector-recording = false
**.mechost*.mecPlatform.mp1Ppp.**.vector-recording = false
**.mechost*.mecPlatform.lo*.**.vector-recording = false
**.mechost*.mecPlatform.extEth.**.vector-recording = false
**.mechost*.mecPlatform.ipv4.**.vector-recording = false
**.mechost*.mecPlatform.ipv6.**.vector-recording = false
**.mechost*.mecPlatform.udp.**.vector-recording = false
**.mechost*.mecPlatform.tcp.**.vector-recording = false
**.upf.**.vector-recording = false
**.iUpf.**.vector-recording = false
**.gNodeB1.**.vector-recording = false
**.router.**.vector-recording = false
**.server.**.vector-recording = false
**.mecOrchestrator.**.vector-recording = true
**.ualcmp.**.vector-recording = false
**.configurator.**.vector-recording = false
**.binder.**.vector-recording = false
**.carrierAggregation.**.vector-recording = false
**.channelControl.**.vector-recording = false
**.routingRecorder.**.vector-recording = false
**.ue[*].**.vector-recording = true
**.ue[*].mobility.**.vector-recording = false
**.ue[*].interfaceTable.**.vector-recording = false
**.ue[*].pcapRecorder*.**.vector-recording = false
**.ue[*].ueCollector.**.vector-recording = false
**.ue[*].udp.**.vector-recording = false
**.ue[*].tcp.**.vector-recording = false
**.ue[*].sctp.**.vector-recording = false
**.ue[*].ipv4.**.vector-recording = false
**.ue[*].ipv6.**.vector-recording = false
**.ue[*].encap.**.vector-recording = false
**.ue[*].cellularNic.**.vector-recording = false
**.ue[*].lo*.**.vector-recording = false
**.ue[*].eth*.**.vector-recording = false

**.car[*].mobility.**.vector-recording = false
**.car[*].interfaceTable.**.vector-recording = false
**.car[*].pcapRecorder*.**.vector-recording = false
**.car[*].ueCollector.**.vector-recording = false
**.car[*].udp.**.vector-recording = false
**.car[*].tcp.**.vector-recording = false
**.car[*].sctp.**.vector-recording = false
**.car[*].ipv4.**.vector-recording = false
**.car[*].ipv6.**.vector-recording = false
**.car[*].encap.**.vector-recording = false
**.car[*].cellularNic.**.vector-recording = false
**.car[*].lo*.**.vector-recording = false
**.car[*].eth*.**.vector-recording = false

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 2000m
**.mobility.constraintAreaMaxY = 10000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### BS position #################
*.gNodeB1.mobility.initialX = 140m
*.gNodeB1.mobility.initialY = 300m
*.gNodeB2.mobility.initialX = 840m
*.gNodeB2.mobility.initialY = 300m

############### mechost positions #################
*.mechost1.mobility.initialX = 140m
*.mechost1.mobility.initialY = 200m
#*.mechost1.coordinateX = 500
#*.mechost1.coordinateY = 200

*.mechost2.mobility.initialX = 840m
*.mechost2.mobility.initialY = 200m

############### X2 configuration #################
*.gNodeB*.numX2Apps = 1                                        # one x2App per peering node
*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0" 
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 

#------------Server configuration---------------
*.server.numApps = 2
*.server.app[0].typename = "HttpBrokerApp"
*.server.app[1].typename = "ResourceRegisterApp"
*.server.app[1].startTime = 0.02s


##------------MecCar configuration---------------
# use this for ping time comparison graph
#**.numParkedCar = ${NUMPARKED = int($SKIP)}

**.numParkedCar = ${NUMCARS=10}
#**.numParkedCar = ${NUMCARS=10..150 step 10}
**.numUe = ${NUMUE=1}
#**.numUe = 100
*.car[*].numApps = 1
*.car[*].viApp.localPort = 2222
#*.car[0].viApp.localAddress = "car[0]"
#*.car[1].viApp.localAddress = "car[1]"
*.car[*].viApp.localAddress = "car[" + string(parentIndex()) + "]"
##*.car[1].viApp.localAddress = "car[1]"
*.car[*].viApp.vimAddress = "mechost1.vim"
*.car[*].viApp.vimPort = 3333
*.car[*].viApp.mp1Address = "mechost1.mecPlatform"
*.car[*].viApp.mp1Port = 10021
*.car[*].app[0].typename = "ClientResourceApp"
*.car[*].app[0].localPort = 3333
#*.car.app[0].destPort = 3333
*.car[*].app[0].destAddress = "server" 
#*.car[0].app[0].localAddress = "car[0]"
#*.car[1].app[0].localAddress = "car[1]"
*.car[*].app[0].localAddress = "car[" + string(parentIndex()) + "]"
#*.car2.app[0].localAddress = "car2"
*.car[*].app[0].viPort = 2222
*.car[*].app[0].startTime = 0.05s
#*.car[*].app[0].parkTime = 40s
*.car[*].app[0].parkTime = uniform(8s, 10s)


##------------CAR initial position---------------
#**.car[*].mobility.initialX = uniform(140m, 800m)
#**.car[*].mobility.initialY = uniform(220m, 250m)
**.car[0].mobility.initialX = 125m# uniform(140m, 800m)
**.car[0].mobility.initialY = 130m#uniform(220m, 250m)
**.car[1].mobility.initialX = 145m# uniform(140m, 800m)
**.car[1].mobility.initialY = 130m#uniform(220m, 250m)
**.car[2].mobility.initialX = 165m# uniform(140m, 800m)
**.car[2].mobility.initialY = 130m#uniform(220m, 250m)
**.car[3].mobility.initialX = 125m# uniform(140m, 800m)
**.car[3].mobility.initialY = 150m#uniform(220m, 250m)
**.car[4].mobility.initialX = 145m# uniform(140m, 800m)
**.car[4].mobility.initialY = 150m#uniform(220m, 250m)
**.car[5].mobility.initialX = 165m# uniform(140m, 800m)
**.car[5].mobility.initialY = 150m#uniform(220m, 250m)
**.car[6].mobility.initialX = 850m# uniform(140m, 800m)
**.car[6].mobility.initialY = 130m#uniform(220m, 250m)
**.car[7].mobility.initialX = 870m# uniform(140m, 800m)
**.car[7].mobility.initialY = 130m#uniform(220m, 250m)
**.car[8].mobility.initialX = 850m# uniform(140m, 800m)
**.car[8].mobility.initialY = 150m#uniform(220m, 250m)
**.car[9].mobility.initialX = 870m# uniform(140m, 800m)
**.car[9].mobility.initialY = 150m#uniform(220m, 250m)


##------------UEWarningAlertApp---------------
*.ue[*].numApps = 2
*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/ExtMECWarningAlertApp.json"
##
*.ue[*].app[1].typename = "DUEWarningAlertApp"
*.ue[*].app[1].mecAppName = "ExtMECWarningAlertApp"

# set address
*.ue[*].app[1].deviceAppAddress = "ue[" + string(parentIndex()) + "]"
*.ue[*].app[1].amsAddress = "mechost1.mecPlatform"
*.ue[*].app[1].amsPort = 10022
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = 0.5s										#when sending start warning alert app									#period to sending messages
*.ue[*].app[1].stopTime = 60s
#
*.ue[*].app[1].positionX = 340
*.ue[*].app[1].positionY = 411
*.ue[*].app[1].radius = 30

#*.ue[*].app[1].coreAddress = "cloudServer"
#*.ue[*].app[1].coreTesting = true


## UEs INITIAL POSITIONs
*.ue[*].mobility.typename = "LinearMobility"
**.ue[*].mobility.initialX = 250m
**.ue[*].mobility.initialY = 411m


**.ue[*].mobility.initialMovementHeading = 0deg
**.ue[*].mobility.speed = 8mps


# UALCMP config
*.ualcmp.isMEOapp = true

# MEC Orchestrator settings
*.mecOrchestrator.meoApp.localAddress = "mecOrchestrator"
*.mecOrchestrator.meoApp.localPort = 9876
*.mecOrchestrator.meoApp.mecApplicationPackageList = "ExtMECWarningAlertApp"

## MECHost configuration
*.mechost*.maxMECApps = 100	
*.mechost1.bsList = "gNodeB1"
*.mechost2.bsList = "gNodeB2"
*.mechost1.color = "purple"
*.mechost2.color = "green"

# Vim and VI Addresses
*.mechost1.vim.vimApp.localAddress = "mechost1.vim"
*.mechost1.vim.viApp.localAddress = "mechost1.vim"
*.mechost1.vim.viApp.vimAddress = "mechost1.vim"
*.mechost2.vim.vimApp.localAddress = "mechost2.vim"
*.mechost2.vim.viApp.localAddress = "mechost2.vim"
*.mechost2.vim.viApp.vimAddress = "mechost2.vim"


# Other VIM/VI parameters
*.mechost*.vim.vimApp.localPort = 3333 
*.mechost*.vim.vimApp.brokerAddress = "server"
*.mechost*.vim.vimApp.searchType = "ROUND_ROBIN"
*.mechost*.vim.vimApp.skipLocalResources = ${SKIP=true}
*.mechost1.vim.vimApp.mepmAddress = "mechost1.mecPlatformManagerHost"
*.mechost2.vim.vimApp.mepmAddress = "mechost2.mecPlatformManagerHost"
*.mechost*.vim.vimApp.mepmPort = 3334
*.mechost*.vim.vimApp.meoAddress = "mecOrchestrator"
*.mechost*.vim.vimApp.meoPort = 9876
*.mechost1.vim.vimApp.mp1Address = "mechost1.mecPlatform"
*.mechost2.vim.vimApp.mp1Address = "mechost2.mecPlatform"
*.mechost2.vim.vimapp.mp1port = 10021
*.mechost*.vim.viApp.vimPort = 3333

*.mechost*.vim.viApp.stateSize = ${STATEDIM=174B,1kB,10kB,100kB,1MB,10MB, 50MB, 100MB}
*.car[*].viApp.stateSize = ${STATEDIM}


# Mepm
*.mechost1.mecPlatformManagerHost.mepmApp.localAddress = "mechost1.mecPlatformManagerHost"
*.mechost1.mecPlatformManagerHost.mepmApp.vimAddress = "mechost1.vim"
*.mechost1.mecPlatformManagerHost.mepmApp.brokerAddress = "mechost1.mecPlatform"
*.mechost2.mecPlatformManagerHost.mepmApp.localAddress = "mechost2.mecPlatformManagerHost"
*.mechost2.mecPlatformManagerHost.mepmApp.vimAddress = "mechost2.vim"
*.mechost2.mecPlatformManagerHost.mepmApp.brokerAddress = "mechost2.mecPlatform"
*.mechost*.mecPlatformManagerHost.mepmApp.vimPort = 3333
*.mechost*.mecPlatformManagerHost.mepmApp.meoAddress = "mecOrchestrator"
*.mechost*.mecPlatformManagerHost.mepmApp.meoPort = 9876
*.mechost*.mecPlatformManagerHost.mepmApp.brokerPort = 10022

# Mep
**.mechost*.mecPlatform.numMecServices = 2
**.mechost*.mecPlatform.mecService[0].typename = "LocationService"
**.mechost1.mecPlatform.mecService[*].localAddress = "mechost1.mecPlatform" #da cambiare!!
**.mechost2.mecPlatform.mecService[*].localAddress = "mechost2.mecPlatform" #da cambiare!!
**.mechost*.mecPlatform.mecService[0].localPort = 10020

**.mechost*.mecPlatform.mecService[1].typename = "ApplicationMobilityService"
**.mechost*.mecPlatform.mecService[1].localPort = 10022

**.mechost*.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
**.mechost*.mecPlatform.mecService[0].rng-0 = 0 # request service time
**.mechost*.mecPlatform.mecService[0].requestServiceTime = 100us
**.mechost*.mecPlatform.mecService[0].subscriptionServiceTime = 11us

**.mechost1.mecPlatform.serviceRegistry.localAddress = "mechost1.mecPlatform" #da cambiare!!
**.mechost2.mecPlatform.serviceRegistry.localAddress = "mechost2.mecPlatform" #da cambiare!!
**.mechost*.mecPlatform.serviceRegistry.localPort = 10021

**.mechost*.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
**.mechost*.mecPlatform.serviceRegistry.rng-0 = 0 # request service time




